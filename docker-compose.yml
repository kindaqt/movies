version: '3.4'
services:
  api:
    container_name: movies-api
    image: golang:1.14.4-alpine
    working_dir: /go/src/github.com/kindaqt/movies
    links:
      - db
    expose:
      - "${API_PORT}"
    ports:
      - "${API_PORT}:${API_PORT}"
    restart: unless-stopped
    environment:
      VERSION: ${VERSION}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_SSL: ${POSTGRES_SSL}
    depends_on:
      - db
      - migration
    entrypoint: >
      sh -c "
        go mod download && 
        go get github.com/githubnemo/CompileDaemon && 
        CompileDaemon --log-prefix='false' --build='go build -o ./out/api' --command='./out/api'
      "
    volumes:
      - ./api:/go/src/github.com/kindaqt/movies
  db:
    image: postgres:12
    container_name: movies-db
    restart: unless-stopped
    expose:
      - "${POSTGRES_PORT}"
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      VERSION: ${VERSION}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_SSL: ${POSTGRES_SSL}
  migration:
    image: migrate/migrate
    command: ["-path", "/migrations", "-database",  "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=${POSTGRES_SSL}", "${MIGRATION_CMD}", "${MIGRATION_VERSION}"]
    links:
      - db
    depends_on: 
      - db
    volumes:
      - ./db/postgres/migrations:/migrations
  # TODO: ui service